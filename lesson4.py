#
# Работа с переменными:
#  1. Переменной var_int присвойте значение 10, var_float - значение 8.4, var_str - "No".
#  2. Измените значение, хранимое в переменной var_int, увеличив его в 3.5 раза,
#  результат свяжите с переменной big_int.
#  3. Измените значение, хранимое в переменной var_float, уменьшив его на единицу,
#  результат свяжите с той же переменной.
#  4. Разделите var_int на var_float, а затем big_int на var_float. Результат данных
#  выражений не привязывайте ни к каким переменным.
#  5. Измените значение переменной var_str на "NoNoYesYesYes". При формировании
#  нового значения используйте операции конкатенации (+) и повторения строки (*).
#  6. Выведите значения всех переменных
from itertools import count
from termios import B9600

from sympy.combinatorics.galois import S1TransitiveSubgroups, S2TransitiveSubgroups

#1
var_int=10
var_float=8.4
var_str="No"
print(var_int,var_float,var_str)

#2
big_int=var_int*3.5
print(big_int)

#3
var_float=var_float-1
print(var_float)

#4
print(var_int/var_float)
print(big_int/var_float)

#5
var_str=2*var_str+3*"Yes"
print(var_str)

#6
print(var_int,var_float,var_str)

# Строки:
# 1. Свяжите переменную с любой строкой, состоящей не менее чем из 8 символов.Извлеките из строки первый символ, затем последний, третий с начала и третий с конца. Измерьте длину вашей строки.
# 2. Присвойте произвольную строку длиной 10-15 символов переменной и
# извлеките из нее следующие срезы:
# ● первые восемь символов
# ● четыре символа из центра строки
# ● символы с индексами кратными трем
# ● переверните строку
# 3. Есть строка: “my name is name”. Напечатайте ее, но вместо 2ого “name”
# вставьте ваше имя.
# 4. Есть строка: test_tring = "Hello world!", необходимо напечатать на каком месте находится буква w
# ● кол-во букв l
# ● Проверить начинается ли строка с подстроки: “Hello”
# ● Проверить заканчивается ли строка подстрокой: “qwe”

#1
a="winteriscoming"
print(a[0],a[-1],a[2],a[-3])
print(len(a))
#2
b="winteriscoming"
print(b[0:7])
center=len(b)/2
print(int(center))
print(b[int(center)-2:int(center)+2])
#3
myname = "Olga"
a=f"my name is {myname}"
print(a)
#4
test_tring = "Hello world!"
print(test_tring.find("w"))
print(test_tring.count("l"))
print(test_tring.startswith("Hello"))
print(test_tring.endswith("qwe"))

# Списки:
# 1. Создайте два любых списка и свяжите их с переменными.
# 2. Извлеките из первого списка второй элемент.
# 3. Измените во втором списке последний элемент. Выведите список на экран.
# 4. Соедините оба списка в один, присвоив результат новой переменной.
# Выведите получившийся список на экран.
# 5. "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части обоих первых списков. Срез свяжите с очередной новой переменной. Выведите значение этой переменной.
# 6. Добавьте в список два новых элемента и снова выведите его.
# 7. Даны списки:
# a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89];
# b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13].
# Нужно вернуть список, который состоит из элементов, общих для этих двух списков. -- !не использовать циклы
# 8. Есть список: [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3] оставить в нем только уникальные значения. !не использовать циклы

#1
list1 = [1,2,"ff"]
list2 = [5,6,"gg"]
#2
print(list1[1])
#3
list2[-1] = "xo"
print(list2)
#4
list3 = list1+list2
print(list3)
#5
c = list3[0:4]
print(c)
#6
list3= list3 + [5,7]
print(list3)
#7
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
a = set(a)
b = set(b)
intersection = a & b
print(intersection)
#8
d = [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
d = set(d)
d = list(set(d))
print(d)

# Логические операции:
# 1. Присвойте двум переменным любые числовые значения.
# 2. Составьте четыре сложных логических выражения с помощью оператора and, два из которых должны давать истину,
# а два других - ложь.
# 3. Аналогично выполните п. 2, но уже используя оператор or.
# 4. Попробуйте использовать в сложных логических выражениях работу с переменными строкового типа.

#1
e = 34
f = 67
#2
result1 = e >4 and f > 4
result2 = e > -1 and f > -4
result3 = e <= 10 and f <= 10
result4 = e == 1 and f == 1
print(result1,result2,result3,result4)
#3
g = 77
k = 111
result5 = g < 5  or k > 1
res6 = g > 78 or k > 78

print(result5,res6)
#6

result1 = "alexej" > "alexander" and "sergej" < "ira"
print(result1)

# Словари:
# 1. Создайте словарь, связав его с переменной school, и наполните его данными,
# которые бы отражали количество учащихся в десяти разных классах (например, 1а, 1б, 2б, 6а, 7в и т.д.).
# 2. Узнайте сколько человек в каком-нибудь классе.
# 3. Представьте, что в школе произошли изменения, внесите их в словарь:
# ◦ в трех классах изменилось количество учащихся;
# ◦ в школе появилось два новых класса;
# ◦ в школе расформировали один из классов.
# 4. Выведите содержимое словаря на экран.

#1
school = {"1b":29,"2c":16,"3a":14,"4b":19,"5a":14,"6b":14,"7b":13,"8b":14,"9a":11,"10c":14}
#2
print(school["4b"])
#3
school["2c"] = 13
school["4b"] = 99
school["7b"] = 99
print(school)
school["1a"] = 11
school["1c"] = 12

del school["10c"]
print(school)

#4
print(school)

# Преобразование типов

# 1. Перевести строку в массив
# "Robin Singh" => ["Robin”, “Singh"]
# "I love arrays they are my favorite" => ["I", "love", "arrays", "they", "are", "my", "favorite"]

a = "Robin Singh".split(" ")  #spilit всегда преобразует в массив, не нужно еще раз прописывать a=list(a)
print(a)
b = "I love arrays they are my favorite".split(" ")
print(b)
#2 Дан список: [‘Ivan’, ‘Ivanou’], и 2 строки: Minsk, Belarus
# Напечатайте текст: “Привет, Ivan Ivanou! Добро пожаловать в Minsk Belarus”
name_lastname = ["Ivan", "Ivanou"]
city = "Minsk"
country = "Belarus"
string = " ".join(name_lastname)
print(string)
text = f"Привет, {string} ! Добро пожаловать в {city} {country}"
print(text)
#3. Дан список ["I", "love", "arrays", "they", "are", "my", "favorite"] сделайте из него строку =>
# "I love arrays they are my favorite"
a = ["I", "love", "arrays", "they", "are", "my", "favorite"]
b = " ".join(a)
print(b)
# 4. Создайте список из 10 элементов, вставьте на 3-ю позицию новое значение, удалите элемент из списка
# под индексом 6

list1 = [1,2,3,4,5,6,7,8,9,10]
list1.insert(2, 99)
print(list1)
deleted_el = list1.pop(6)
print(list1)

# 5. Есть 2 словаря
# a = { 'a': 1, 'b': 2, 'c': 3} b = { 'c': 3, 'd': 4,'e': 5}
# Необходимо их объединить по ключам, а значения ключей поместить в список, если у одного словаря
# есть ключ "а", а у другого нету, то поставить значение None на соответствующую позицию
# (1-я позиция для 1-ого словаря, вторая для 2-ого)
# ab = {'a': [1, None], 'b': [2, None], 'c': [3, 3], 'd': [None, 4], 'e': [None, 5]}

a = { 'a': 1, 'b': 2, 'c': 3}
b = { 'c': 3, 'd': 4,'e': 5}


#dict set default

# Условия
# 1. Дано целое число. Если оно является положительным, то прибавить к нему 1;
# в противном случае не изменять его. Вывести полученное число.

a = int(45)
if a > 0 :
    a = a + 1
else :
    a = a

print(a)

# 2. Даны три целых числа. Найти количество положительных чисел в исходном наборе.

a = int(2)
b = int(34)
c = int(-33)
summ = 0

if a > 0 :
    summ = summ + 1
else :
    summ = summ

if b > 0 :
    summ = summ + 1
else :
    summ = summ
if c > 0 :
    summ = summ + 1
else :
    summ = summ
print("Kol-vo polozhit 4isel :", summ)


# 3. Дан номер года (положительное целое число). Определить количество дней в этом году,
# учитывая, что обычный год насчитывает 365 дней, а високосный — 366 дней.
# Високосным считается год, делящийся на 4, за исключением тех годов, которые делятся на 100 и не делятся на 400
# (например, годы 300, 1300 и 1900 не являются високосными, а 1200 и 2000 являются).

a = int(1992)
if a % 4 == 0 :
    if a % 100 == 0 and a % 400 != 0 :
        print("kol-vo dnej 365")
    else :
        print("kol-vo dnej 366")

else:
    print ("kol-vo dnej 365")




# 4. Дано целое число в диапазоне 1–7. Вывести строку — название дня недели, соответствующее данному числу
# (1 — «понедельник», 2 — «втор- ник» и т. д.).

a = int(4)
week_days = {1:"понедельник", 2:"вторник", 3: "wednesday", 4: "thursday", 5: "friday", 6:"saturday", 7:"sunday"}
print(week_days[4])


# 5. Единицы массы пронумерованы следующим образом: 1 — килограмм, 2 — миллиграмм, 3 — грамм, 4 — тонна,
# 5 — центнер. Дан номер единицы массы (целое число в диапазоне 1–5) и масса тела в этих единицах (вещественное число).
# Найти массу тела в килограммах.

a = { 1:1, 2:0.000001, 3:0.001, 4:1000, 5:100}
massa_tela = 330
ed_izmer = 3
print(massa_tela*a[ed_izmer])

# Цикл for
# 1. Даны два целых числа A и B (A < B). Найти сумму всех целых чисел от A до B включительно.
A = int(5)
B = int(8)
summa = 0
for i in range(A, B+1):
    summa += i
print(summa)

# 2. Найти сумму всех натуральных чисел в от A до B
A = int(-5)
B = int(8)
summa = 0
for i in range(A, B+1):
    if i > 0 :
        summa += i

print(summa)

# 3. Найти произведение положительных,
# сумму и количество отрицательных из 10 введенных целых значений.
A = int(-5)
B = int(8)
C = int(7)
D = int(9)
F = int(-8)
L = int(8)
K = int(-86)
H = int(44)
W = int(23)
T = int(-8)

J = [A, B, C, D, F, L, K, H, W, T]
proo = 1
summa = 0
kolvo = 0
for i in J :
    if i > 0:
        proo *= i
    if i < 0 :
        summa += i
    if i < 0 :
        kolvo = kolvo + 1

print(proo)
print(summa)
print(kolvo)


# 4. Дан словарь пловцов с их результатами. Напечатать лучший результат заплыва среди 6 участников.
# Бекиш Александр - 21,07
# Будник Алексей - 20,34
# Гребень Анастасия - 22,12
# Давидович Татьяна - 30
# Дешук Дмитрий - 24.01
# Казак Анна - 28,17

plovcy = {"Бекиш Александр": 21.07, "Будник Алексей": 20.34, "Гребень Анастасия" : 22.12 , "Давидович Татьяна" : 30, "Дешук Дмитрий" : 24.01, "Казак Анна" :28.17 }
print(min(plovcy.values()))

# 5.   Есть массив чисел. Известно, что каждое число в этом массиве имеет пару, кроме одного:
# [1, 5, 2, 9, 2, 9, 1] => 5. Напишите программу, которая будет выводить уникальное число

massiv = [1, 5, 2, 9, 2, 9, 1]
cache = set()
for i in massiv:
    if i in cache:
        cache.remove(i)

    else:
        cache.add(i)
print(cache.pop())

# Цикл while
# 1. Дано число N. Найти произведение всех чисел от 0 до N.

N = 9
i = 0
proizved = 1
while i <= N:
    proizved = proizved * i
    i = i+1

print(proizved)



# 2. Поле засеяли цветами двух сортов на площади S1 и S2. Каждый год
# площадь цветов первого сорта увеличивается вдвое, а площадь второго сорта увеличивается втрое.
# Через сколько лет площадь первых сортов будет составлять меньше 10% от площади вторых сортов.

S1 = 4
S2 = 7
God = 0

while S1 > 0.1 * S2:
    God += 1
    S1 = S1 * 2
    S2 = S2 * 3
    print(S1,S2)

print(God)



# 3. Дано целое число N (>0). Используя операции деления нацело и взятия остатка от деления,
# найти количество и сумму его цифр.

N = 5430
i = 1
summa_cifr = 0
while N // 10 >0:
    summa_cifr += N % 10
    N = N // 10
    i += 1
summa_cifr += N % 10


print(i,summa_cifr)


# 4. Деду M лет, а внуку N лет. Через сколько лет дед станет вдвое старше внука.
# И сколько при этом лет будет деду и внуку.

m = 65
n = 4
cherez_skolko = 0

while m > 2 * n:
    cherez_skolko += 1
    m = m + 1
    n = n + 1

print(n,m,cherez_skolko)